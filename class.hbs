{{#if behaviors}}
class {{className}} extends Polymer.mixinBehaviors([{{#each behaviors as |behavior| }}{{behavior}}{{/each}}], Polymer.Element) {
{{else}}
class {{className}} extends Polymer.Element {
{{/if}}
  static get is() {
    return '{{fileName}}';
  }
{{#if properties}}
  static get properties() {
    return {
      {{properties}}
    };
  }
{{/if}}
{{#if hasCreated}}
  constructor() {
    super();
    {{hasCreated}}
  }
{{/if}}
{{#if observers}}
  static get observers() {
    return [
      {{observers}}
    ];
  }
{{/if}}
{{#if listeners}}
  ready() {
    super.ready();
  {{#each listeners as |listener| }}
    {{listener}}
  {{/each}}
  }
{{/if}}
{{#if hasReady}}
  {{hasReady}}
{{/if}}
{{#if hasAttached}}
  {{hasAttached}}
{{/if}}
{{#if hasDetached}}
  {{hasDetached}}
{{/if}}
{{#if hasAttributeChanged}}
  {{hasAttributeChanged}}
{{/if}}
{{#if methods}}
  {{methods}}
{{else}}
}
{{/if}}

customElements.define({{className}}.is, {{className}});